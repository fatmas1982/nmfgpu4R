% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kmeansgpu.R
\name{kmeansgpu}
\alias{fitted.kmeansgpu}
\alias{kmeansgpu}
\alias{print.kmeansgpu}
\title{K-means Clustering on GPU}
\usage{
kmeansgpu(data, k, seed = floor(runif(1, 0, .Machine$integer.max)),
  maxiter = 100, threshold = 0.05, useSinglePrecision = F)

\method{print}{kmeansgpu}(object, ...)

\method{fitted}{kmeansgpu}(object, ...)
}
\arguments{
\item{data}{A numeric data matrix or compatible type with attributes in columns and data samples in rows.}

\item{k}{Number of clusters to compute for the data matrix.}

\item{seed}{A seed used to initialize the random number generators for initialization of the cluster centers.}

\item{maxiter}{Maximum number of iterations until the algorithm execution is aborted.}

\item{threshold}{If the percentage change of cluster memberships is lower than the \code{threshold}, then the algorithm
converges (default is 5\% of data samples).}

\item{useSinglePrecision}{Algorithm can be exeucted either using single precision or double precision floating point values.
Especially when you are not using High Performance Computing (HPC) devices such as Nvidia Tesla series it might lead to 
significant performance improvements if single precision computation is enabled. Most graphic devices only have limited support 
for double precision floating point operations.}

\item{object}{Object of class "\code{kmeansgpu}"}

\item{...}{Unused arguments}
}
\value{
Returns a list of class "\code{kmeansgpu}" which has a \code{print} and a \code{fitted} method. The list 
contains the following information:

\tabular{ll}{
 \code{cluster} \tab Integer vector of length \code{1:nrow(data)} with cluster assignments in the range of \code{1:k}. \cr
 
 \code{centers} \tab Numeric matrix containing \code{k} cluster centers computed by the k-Means algorithm. \cr
 
 \code{size} \tab Integer vector of length \code{k} containing the number of assigned data samples for each cluster. \cr
 
 \code{betweenss} \tab Numeric value containing the between-cluster sum of squares. \cr
 
 \code{withinss} \tab Numeric vector of length \code{k} containing the within-cluster sum of squares for each cluster. \cr
 
 \code{tot.withinss} \tab Numeric value containg the sum of all \code{withinss} values. \cr
 
 \code{totss} \tab Numeric value containing the sum of \code{betweenss} and \code{tot.within}.
}
}
\description{
Performs k-means clustering on a data matrix using the GPU.
}

