% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ssnmfgpu.R
\name{ssnmfgpu}
\alias{predict.ssnmfgpu}
\alias{ssnmfgpu}
\alias{ssnmfgpu.default}
\alias{ssnmfgpu.formula}
\title{Semi-supervised Non-negative Matrix Factorization (SSNMF) on GPU}
\usage{
ssnmfgpu(...)

\method{ssnmfgpu}{default}(data, r, ...)

\method{ssnmfgpu}{formula}(formula, data, ...)

\method{predict}{ssnmfgpu}(object, newdata, ...)
}
\arguments{
\item{...}{}

\item{data}{Test}

\item{r}{Test}

\item{object}{Object of class "\code{ssnmfgpu}"}

\item{newdata}{New data matrix compatible to the training data matrix, for computing the corresponding mixing matrix.}
}
\value{
If the factorization process was successful then a list of class "\code{ssnmfgpu}" is returned which has a \code{predict} method. The list 
contains the following information:

\tabular{ll}{
 \code{basis.train} \tab Numeric matrix with \code{r} basis vectors from the training dataset. These basis vectors will
 be used to compute a mixing matrix to encode new data matrices. (For ease of further computations this matrix is stored in transposed form) \cr
 \code{encoding.train} \
}
}
\description{
test
\deqn{V_{train}=W_{train}H_{train}}{V.train=W.train*H.train}
\deqn{V_{test}=W_{train}H_{test}}{V.test=W.train*H.test}
}

